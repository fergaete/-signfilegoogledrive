# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:
    encoders:
        AppBundle\Entity\Usuario:
            algorithm: sha512
            encode_as_base64: false
            iterations: 1
            
        #Symfony\Component\Security\Core\User\User: plaintext

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        database:
            entity:
                class: AppBundle\Entity\Usuario
                property: email
                
        in_memory:
            memory:
                users:
                    admin: { password: admin, roles: ['ROLE_USER', 'ROLE_OAUTH_USER', 'ROLE_SONATA_ADMIN'] }
        hwi:                               
            id: app.service.oauth.user_provider

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js|admin/_(wdt|profiler))/
            security: false
            
        sign_in:
            pattern:                ^/sign-in$
            security:               false
            
        login_admin:
            pattern:                ^/admin/login$
            security:               false
            
        admin:
            anonymous:             true
            pattern:               /admin(.*)
            context:               user
            form_login:
                provider:            database
                default_target_path: /admin
                login_path:          /admin/login
                use_forward:         false
                check_path:          /admin/login-check
                failure_path:        /error
            logout:
                path:              /admin/logout
                target:            /admin/login
            
        secured_area:
            anonymous: ~
            oauth:
                resource_owners:
                    google:         "/success"
                login_path:         /sign-in
                use_forward:        false
                failure_path:       /error
                oauth_user_provider:
                    service:        app.service.oauth.user_provider
            logout:                 true            

    access_control:
        #Frontend
        - { path: ^/sign-in$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: /error, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        #Backend
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login-check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        #Secured_area
        - { path: ^/admin(.*), role: ROLE_SONATA_ADMIN }
        
        - { path: ^/.*, role: ROLE_USER }
        